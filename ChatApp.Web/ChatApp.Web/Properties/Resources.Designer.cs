//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatApp.Web.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChatApp.Web.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;connectionStringName&apos; is missing or empty..
        /// </summary>
        internal static string Connection_name_not_specified {
            get {
                return ResourceManager.GetString("Connection_name_not_specified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection name &apos;{0}&apos; was not found in the applications configuration or the connection string is empty..
        /// </summary>
        internal static string Connection_string_not_found {
            get {
                return ResourceManager.GetString("Connection_string_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MongoDB membership provider.
        /// </summary>
        internal static string MembershipProvider_description {
            get {
                return ResourceManager.GetString("MembershipProvider_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minRequiredNonalphanumericCharacters can not be greater than minRequiredPasswordLength..
        /// </summary>
        internal static string MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLength {
            get {
                return ResourceManager.GetString("MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLeng" +
                        "th", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; must not be empty..
        /// </summary>
        internal static string Parameter_can_not_be_empty {
            get {
                return ResourceManager.GetString("Parameter_can_not_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; must not contain the following character(s) &apos;{1}&apos;..
        /// </summary>
        internal static string Parameter_contains_invalid_characters {
            get {
                return ResourceManager.GetString("Parameter_contains_invalid_characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; is too long: it must not exceed {1} chars in length..
        /// </summary>
        internal static string Parameter_too_long {
            get {
                return ResourceManager.GetString("Parameter_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password format specified is invalid..
        /// </summary>
        internal static string Provider_bad_password_format {
            get {
                return ResourceManager.GetString("Provider_bad_password_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured settings are invalid: Hashed passwords cannot be retrieved. Either set the password format to different type, or set supportsPasswordRetrieval to false..
        /// </summary>
        internal static string Provider_can_not_retrieve_hashed_password {
            get {
                return ResourceManager.GetString("Provider_can_not_retrieve_hashed_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute not recognized &apos;{0}&apos;.
        /// </summary>
        internal static string Provider_unrecognized_attribute {
            get {
                return ResourceManager.GetString("Provider_unrecognized_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred. Please check the Event Log..
        /// </summary>
        internal static string ProviderException {
            get {
                return ResourceManager.GetString("ProviderException", resourceCulture);
            }
        }
    }
}
